services:
  microservicios-mysql8:
    container_name: microservicios-mysql8
    #    build:
    #      context: ../mysql8/
    #      dockerfile: Dockerfile
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: db_springboot_cloud
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - data-mysql:/var/lib/mysql
    restart: unless-stopped
    networks:
      - springcloud
    ### Despu√©s de subir el contenedor de mysql8 ejecutas lo siguiente para crear la db y el usuario de zipkin:
    ### sudo chmod +x /business-a/zipkin-mysql/zipkin.sh
    ### sudo ./zipkin.sh

  servicio-productos:
    container_name: servicio-productos
    build:
      context: ./springboot-servicio-productos/
      dockerfile: Dockerfile
    image: servicio-productos:v1
    environment:
      DB_HOST: microservicios-mysql8:3306
      DB_DATABASE: db_springboot_cloud
      DB_USERNAME: root
      DB_PASSWORD: root
      # Usar la DNS de tu instancia EC2 de AWS
      CONFIG_SERVER_URL: ec2-54-237-47-39.compute-1.amazonaws.com:8888
      EUREKA_SERVER_URL: ec2-54-237-47-39.compute-1.amazonaws.com:8761
      #ZUUL_SERVER_URL: ec2-100-26-165-125.compute-1.amazonaws.com:8765
    networks:
      - springcloud
    depends_on:
      #- config-server
      #- servicio-eureka-server
      - microservicios-mysql8
    restart: unless-stopped

  servicio-items:
    container_name: servicio-items
    build:
      context: ./springboot-servicio-item/
      dockerfile: Dockerfile
    image: servicio-items:v1
    ports:
      - "8002:8002"
      - "8005:8005"
      - "8007:8007"
    networks:
      - springcloud
    depends_on:
      #- config-server
      #- servicio-eureka-server
      - servicio-productos
    restart: unless-stopped

volumes:
  data-mysql:

networks:
  springcloud: